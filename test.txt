Types of test:
Unit
In unit or component testing, the program tests specific individual components by isolating them. 
The components are low level which means that they are closer to the actual written code. 
They often involve use of automation for continuous integration given their small sizes. So you usually write these tests while writing the code.


Integration
integration testing, combines the unit tests and test the flow of data from one component to another. The key word here is an interface. 
This means that you test if the data is correctly fetched from a database within the python code, and if you have sent it to the web page. 
There are different approaches to it such as top down, bottom up and sandwich approaches. 
Your approach depends on what code level interfaces you attempt first. It builds on the unit testing and a tester deals with it.

System 
system testing, which tests all the software you tested against the set requirements and expectations to ensure completeness. 
This includes measurements of the location of deployed components such as reliability, performance, security and load balancing. 
It also measures operability in the working environment such as the platform and the operating system. 
This is the most important stage handled by team of testers. 
It's also the most critical stage as the shipping of software to the stakeholders and end user happened after this phase.


Acceptance testing
acceptance testing. When the product arrives at this stage, it's generally considered to be ready for deployment. 
It's expected to be bug free and meet the set standards. The stakeholders and the select few end users are involved in acceptance testing.


white box testing
black box testing

Pytest and native Python library that is simple, easy to use, and reasonably scalable.